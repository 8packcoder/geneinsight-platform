services:
  # Frontend Service
  - type: web
    name: geneinsight-frontend
    env: node
    buildCommand: npm install && npm run build
    startCommand: npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: NEXT_TELEMETRY_DISABLED
        value: "1"
      - key: NEXT_PUBLIC_API_URL
        fromService:
          type: web
          name: geneinsight-ml-service
          property: host
    
  # ML Service with LangChain
  - type: web
    name: geneinsight-ml-service
    env: python
    buildCommand: |
      cd ml_service &&
      pip install -r requirements.txt &&
      pip install transformers torch langchain-community
    startCommand: cd ml_service && python app.py
    envVars:
      - key: FLASK_ENV
        value: production
      - key: TRANSFORMERS_CACHE
        value: /opt/render/project/src/transformers_cache
      - key: PORT
        value: "5000"
    disk:
      name: model-cache
      mountPath: /opt/render/project/src/transformers_cache
      sizeGB: 2

  # PostgreSQL Database
  - type: pserv
    name: geneinsight-database
    env: postgresql
    plan: free
    ipAllowList: []

databases:
  - name: geneinsight-db
    databaseName: geneinsight
    user: postgres
