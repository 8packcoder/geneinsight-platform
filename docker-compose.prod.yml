version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: geneinsight-mysql-prod
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-geneinsight}
      MYSQL_USER: ${MYSQL_USER:-geneinsight_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-geneinsight_password}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data_prod:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - geneinsight-network-prod
    restart: unless-stopped

  # Python ML Service
  ml-service:
    build:
      context: ./ml_service
      dockerfile: Dockerfile
    container_name: geneinsight-ml-prod
    environment:
      FLASK_ENV: production
      FLASK_DEBUG: "false"
    ports:
      - "${ML_PORT:-5000}:5000"
    volumes:
      - ml_models_prod:/app/models
    networks:
      - geneinsight-network-prod
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Spring Boot Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: geneinsight-backend-prod
    environment:
      SPRING_PROFILES_ACTIVE: production
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${MYSQL_DATABASE:-geneinsight}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER:-geneinsight_user}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD:-geneinsight_password}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQLDialect
      ML_SERVICE_URL: http://ml-service:5000
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      JWT_SECRET: ${JWT_SECRET:-geneInsightSecretKeyForJWTTokenGeneration2024}
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    depends_on:
      mysql:
        condition: service_healthy
      ml-service:
        condition: service_started
    networks:
      - geneinsight-network-prod
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Frontend
  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8080}
    container_name: geneinsight-frontend-prod
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8080}
      NODE_ENV: production
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    depends_on:
      - backend
    networks:
      - geneinsight-network-prod
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data_prod:
    driver: local
  ml_models_prod:
    driver: local

networks:
  geneinsight-network-prod:
    driver: bridge
